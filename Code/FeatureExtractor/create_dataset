{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "fa7448cc",
   "metadata": {},
   "source": [
    "# Create Dataset\n",
    "\n",
    "This notebook leverages the FeatureExtractore code we wrote to extract key features  from the \"Dike\" dataset (https://github.com/iosifache/dike)\n",
    "\n",
    "Then, this notebook merges the now parsed features of these files to the labels provided within the dataset\n",
    "\n",
    "The output of this notebook will be used for future modeling "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf109ead",
   "metadata": {},
   "source": [
    "# Imports / Parameters "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a9df2fc3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import os, sys\n",
    "\n",
    "import re\n",
    "\n",
    "from featureEx import FeatureExtractor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "400525d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "malware_files = r\"C:\\Users\\caleb\\PycharmProjects\\security_project\\security_project\\Code\\family_dataset\\DikeDataset-main\\DikeDataset-main\\files\\malware\\\\\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "41c905f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "malware_labels = pd.read_csv(\"C:\\\\Users\\\\caleb\\\\PycharmProjects\\\\security_project\\\\security_project\\\\Code\\\\family_dataset\\\\DikeDataset-main\\\\DikeDataset-main\\\\labels\\\\malware.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8a1cddd1",
   "metadata": {},
   "outputs": [],
   "source": [
    "benign_files = r\"C:\\Users\\caleb\\PycharmProjects\\security_project\\security_project\\Code\\family_dataset\\DikeDataset-main\\DikeDataset-main\\files\\benign\\\\\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5596547e",
   "metadata": {},
   "outputs": [],
   "source": [
    "benign_labels = pd.read_csv(\"C:\\\\Users\\\\caleb\\\\PycharmProjects\\\\security_project\\\\security_project\\\\Code\\\\family_dataset\\\\DikeDataset-main\\\\DikeDataset-main\\\\labels\\\\benign.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75ce2650",
   "metadata": {},
   "source": [
    "# Extract Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d4285477",
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_df(file_path):\n",
    "    \n",
    "    master_df = pd.DataFrame()\n",
    "    # Need to go through each file and extract core info\n",
    "    for file in os.listdir(file_path):\n",
    "        try:\n",
    "            # instead of foo.exe we need foo\n",
    "            hash_name = re.search(r'(.*)\\.',file).group(1)\n",
    "            # Use FeatureExtractor\n",
    "            full_file_path = file_path + file\n",
    "            newFeatureExtractor = FeatureExtractor(path=full_file_path)\n",
    "            attributesToTest_df = newFeatureExtractor.getFileFeatures()\n",
    "            attributesToTest_df[\"hash\"] = hash_name\n",
    "            master_df = master_df.append(attributesToTest_df, ignore_index=True)\n",
    "            del attributesToTest_df\n",
    "            del newFeatureExtractor\n",
    "        except Exception as e:\n",
    "            pass\n",
    "#             print(f\"Issue with {file}\")\n",
    "#             print(e)\n",
    "            \n",
    "    return master_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0067fe98",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Wall time: 7min 14s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "parsed_malware = create_df(malware_files)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "5cc1fee8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6016, 58)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parsed_malware.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "02a41c24",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>md5</th>\n",
       "      <th>Machine</th>\n",
       "      <th>SizeOfOptionalHeader</th>\n",
       "      <th>Characteristics</th>\n",
       "      <th>MajorLinkerVersion</th>\n",
       "      <th>MinorLinkerVersion</th>\n",
       "      <th>SizeOfCode</th>\n",
       "      <th>SizeOfInitializedData</th>\n",
       "      <th>SizeOfUninitializedData</th>\n",
       "      <th>...</th>\n",
       "      <th>ResourcesMeanEntropy</th>\n",
       "      <th>ResourcesMinEntropy</th>\n",
       "      <th>ResourcesMaxEntropy</th>\n",
       "      <th>ResourcesMeanSize</th>\n",
       "      <th>ResourcesMinSize</th>\n",
       "      <th>ResourcesMaxSize</th>\n",
       "      <th>LoadConfigurationSize</th>\n",
       "      <th>VersionInformationSize</th>\n",
       "      <th>legitimate</th>\n",
       "      <th>hash</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>dd7b1c66faa1bde0a42a868acafefcb3</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>36864</td>\n",
       "      <td>380928</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.041344</td>\n",
       "      <td>1.781496</td>\n",
       "      <td>6.505338</td>\n",
       "      <td>963.6</td>\n",
       "      <td>20</td>\n",
       "      <td>4264</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>012a50629c3cf1e2a2e5133b729c2ac7765cf4115187b1...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>6f6d36db833a383f3836639cad4ddbb1</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>24576</td>\n",
       "      <td>420539</td>\n",
       "      <td>397312</td>\n",
       "      <td>...</td>\n",
       "      <td>5.667223</td>\n",
       "      <td>1.919241</td>\n",
       "      <td>7.95996</td>\n",
       "      <td>8029.5</td>\n",
       "      <td>20</td>\n",
       "      <td>16936</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>018b4029f46e529da8dc57b8bc6245644ed59f63b4f8ea...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 58 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  ID                               md5 Machine SizeOfOptionalHeader  \\\n",
       "0  1  dd7b1c66faa1bde0a42a868acafefcb3     332                  224   \n",
       "1  1  6f6d36db833a383f3836639cad4ddbb1     332                  224   \n",
       "\n",
       "  Characteristics MajorLinkerVersion MinorLinkerVersion SizeOfCode  \\\n",
       "0             271                  6                  0      36864   \n",
       "1             271                  7                  0      24576   \n",
       "\n",
       "  SizeOfInitializedData SizeOfUninitializedData  ... ResourcesMeanEntropy  \\\n",
       "0                380928                       0  ...             3.041344   \n",
       "1                420539                  397312  ...             5.667223   \n",
       "\n",
       "  ResourcesMinEntropy ResourcesMaxEntropy ResourcesMeanSize ResourcesMinSize  \\\n",
       "0            1.781496            6.505338             963.6               20   \n",
       "1            1.919241             7.95996            8029.5               20   \n",
       "\n",
       "  ResourcesMaxSize LoadConfigurationSize VersionInformationSize legitimate  \\\n",
       "0             4264                     0                      0       None   \n",
       "1            16936                     0                      0       None   \n",
       "\n",
       "                                                hash  \n",
       "0  012a50629c3cf1e2a2e5133b729c2ac7765cf4115187b1...  \n",
       "1  018b4029f46e529da8dc57b8bc6245644ed59f63b4f8ea...  \n",
       "\n",
       "[2 rows x 58 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parsed_malware.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7c8c3467",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                                0\n",
       "md5                               0\n",
       "Machine                           0\n",
       "SizeOfOptionalHeader              0\n",
       "Characteristics                   0\n",
       "MajorLinkerVersion                0\n",
       "MinorLinkerVersion                0\n",
       "SizeOfCode                        0\n",
       "SizeOfInitializedData             0\n",
       "SizeOfUninitializedData           0\n",
       "AddressOfEntryPoint               0\n",
       "BaseOfCode                        0\n",
       "BaseOfData                        0\n",
       "ImageBase                         0\n",
       "SectionAlignment                  0\n",
       "FileAlignment                     0\n",
       "MajorOperatingSystemVersion       0\n",
       "MinorOperatingSystemVersion       0\n",
       "MajorImageVersion                 0\n",
       "MinorImageVersion                 0\n",
       "MajorSubsystemVersion             0\n",
       "MinorSubsystemVersion             0\n",
       "SizeOfImage                       0\n",
       "SizeOfHeaders                     0\n",
       "CheckSum                          0\n",
       "Subsystem                         0\n",
       "DllCharacteristics                0\n",
       "SizeOfStackReserve                0\n",
       "SizeOfStackCommit                 0\n",
       "SizeOfHeapReserve                 0\n",
       "SizeOfHeapCommit                  0\n",
       "LoaderFlags                       0\n",
       "NumberOfRvaAndSizes               0\n",
       "SectionsNb                        0\n",
       "SectionsMeanEntropy               0\n",
       "SectionsMinEntropy                0\n",
       "SectionsMaxEntropy                0\n",
       "SectionsMeanRawsize               0\n",
       "SectionsMinRawsize                0\n",
       "SectionMaxRawsize                 0\n",
       "SectionsMeanVirtualsize           0\n",
       "SectionsMinVirtualsize            0\n",
       "SectionMaxVirtualsize             0\n",
       "ImportsNbDLL                      0\n",
       "ImportsNb                         0\n",
       "ImportsNbOrdinal                  0\n",
       "ExportNb                          0\n",
       "ResourcesNb                       0\n",
       "ResourcesMeanEntropy              0\n",
       "ResourcesMinEntropy               0\n",
       "ResourcesMaxEntropy               0\n",
       "ResourcesMeanSize                 0\n",
       "ResourcesMinSize                  0\n",
       "ResourcesMaxSize                  0\n",
       "LoadConfigurationSize             0\n",
       "VersionInformationSize            0\n",
       "legitimate                     6016\n",
       "hash                              0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parsed_malware.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7c20efe7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Wall time: 1min 21s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "parsed_benign = create_df(benign_files)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fe810b14",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(962, 58)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parsed_benign.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3bce3f34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>md5</th>\n",
       "      <th>Machine</th>\n",
       "      <th>SizeOfOptionalHeader</th>\n",
       "      <th>Characteristics</th>\n",
       "      <th>MajorLinkerVersion</th>\n",
       "      <th>MinorLinkerVersion</th>\n",
       "      <th>SizeOfCode</th>\n",
       "      <th>SizeOfInitializedData</th>\n",
       "      <th>SizeOfUninitializedData</th>\n",
       "      <th>...</th>\n",
       "      <th>ResourcesMeanEntropy</th>\n",
       "      <th>ResourcesMinEntropy</th>\n",
       "      <th>ResourcesMaxEntropy</th>\n",
       "      <th>ResourcesMeanSize</th>\n",
       "      <th>ResourcesMinSize</th>\n",
       "      <th>ResourcesMaxSize</th>\n",
       "      <th>LoadConfigurationSize</th>\n",
       "      <th>VersionInformationSize</th>\n",
       "      <th>legitimate</th>\n",
       "      <th>hash</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>ebd0e35ecce5c00d31c641690fc77d10</td>\n",
       "      <td>34404</td>\n",
       "      <td>240</td>\n",
       "      <td>34</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>260096</td>\n",
       "      <td>123904</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.21562</td>\n",
       "      <td>3.511363</td>\n",
       "      <td>4.919878</td>\n",
       "      <td>663.5</td>\n",
       "      <td>411</td>\n",
       "      <td>916</td>\n",
       "      <td>112</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>002ce0d28ec990aadbbc89df457189de37d8adaadc9c08...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>c997318e5def9e2386a95f1763bf4cba</td>\n",
       "      <td>34404</td>\n",
       "      <td>240</td>\n",
       "      <td>39</td>\n",
       "      <td>2</td>\n",
       "      <td>27</td>\n",
       "      <td>12288</td>\n",
       "      <td>33792</td>\n",
       "      <td>3072</td>\n",
       "      <td>...</td>\n",
       "      <td>4.104345</td>\n",
       "      <td>2.29162</td>\n",
       "      <td>5.400754</td>\n",
       "      <td>926.2</td>\n",
       "      <td>34</td>\n",
       "      <td>1384</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>003851675800dc05cdac1baa84cab8f68534b244906d97...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 58 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  ID                               md5 Machine SizeOfOptionalHeader  \\\n",
       "0  1  ebd0e35ecce5c00d31c641690fc77d10   34404                  240   \n",
       "1  1  c997318e5def9e2386a95f1763bf4cba   34404                  240   \n",
       "\n",
       "  Characteristics MajorLinkerVersion MinorLinkerVersion SizeOfCode  \\\n",
       "0              34                 11                  0     260096   \n",
       "1              39                  2                 27      12288   \n",
       "\n",
       "  SizeOfInitializedData SizeOfUninitializedData  ... ResourcesMeanEntropy  \\\n",
       "0                123904                       0  ...              4.21562   \n",
       "1                 33792                    3072  ...             4.104345   \n",
       "\n",
       "  ResourcesMinEntropy ResourcesMaxEntropy ResourcesMeanSize ResourcesMinSize  \\\n",
       "0            3.511363            4.919878             663.5              411   \n",
       "1             2.29162            5.400754             926.2               34   \n",
       "\n",
       "  ResourcesMaxSize LoadConfigurationSize VersionInformationSize legitimate  \\\n",
       "0              916                   112                      0       None   \n",
       "1             1384                     0                      0       None   \n",
       "\n",
       "                                                hash  \n",
       "0  002ce0d28ec990aadbbc89df457189de37d8adaadc9c08...  \n",
       "1  003851675800dc05cdac1baa84cab8f68534b244906d97...  \n",
       "\n",
       "[2 rows x 58 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parsed_benign.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "017bdf5c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                               0\n",
       "md5                              0\n",
       "Machine                          0\n",
       "SizeOfOptionalHeader             0\n",
       "Characteristics                  0\n",
       "MajorLinkerVersion               0\n",
       "MinorLinkerVersion               0\n",
       "SizeOfCode                       0\n",
       "SizeOfInitializedData            0\n",
       "SizeOfUninitializedData          0\n",
       "AddressOfEntryPoint              0\n",
       "BaseOfCode                       0\n",
       "BaseOfData                       0\n",
       "ImageBase                        0\n",
       "SectionAlignment                 0\n",
       "FileAlignment                    0\n",
       "MajorOperatingSystemVersion      0\n",
       "MinorOperatingSystemVersion      0\n",
       "MajorImageVersion                0\n",
       "MinorImageVersion                0\n",
       "MajorSubsystemVersion            0\n",
       "MinorSubsystemVersion            0\n",
       "SizeOfImage                      0\n",
       "SizeOfHeaders                    0\n",
       "CheckSum                         0\n",
       "Subsystem                        0\n",
       "DllCharacteristics               0\n",
       "SizeOfStackReserve               0\n",
       "SizeOfStackCommit                0\n",
       "SizeOfHeapReserve                0\n",
       "SizeOfHeapCommit                 0\n",
       "LoaderFlags                      0\n",
       "NumberOfRvaAndSizes              0\n",
       "SectionsNb                       0\n",
       "SectionsMeanEntropy              0\n",
       "SectionsMinEntropy               0\n",
       "SectionsMaxEntropy               0\n",
       "SectionsMeanRawsize              0\n",
       "SectionsMinRawsize               0\n",
       "SectionMaxRawsize                0\n",
       "SectionsMeanVirtualsize          0\n",
       "SectionsMinVirtualsize           0\n",
       "SectionMaxVirtualsize            0\n",
       "ImportsNbDLL                     0\n",
       "ImportsNb                        0\n",
       "ImportsNbOrdinal                 0\n",
       "ExportNb                         0\n",
       "ResourcesNb                      0\n",
       "ResourcesMeanEntropy             0\n",
       "ResourcesMinEntropy              0\n",
       "ResourcesMaxEntropy              0\n",
       "ResourcesMeanSize                0\n",
       "ResourcesMinSize                 0\n",
       "ResourcesMaxSize                 0\n",
       "LoadConfigurationSize            0\n",
       "VersionInformationSize           0\n",
       "legitimate                     962\n",
       "hash                             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parsed_benign.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f93d4b08",
   "metadata": {},
   "source": [
    "# Combine Malware and Benign"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7fcfee29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True,  True])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parsed_malware.columns.values == parsed_benign.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "af6dba8a",
   "metadata": {},
   "outputs": [],
   "source": [
    "parsed_malware[\"source\"] = \"malware\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "6b99ab96",
   "metadata": {},
   "outputs": [],
   "source": [
    "parsed_benign[\"source\"] = \"benign\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "352b54ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6016, 59)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parsed_malware.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "0b45e1b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(962, 59)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parsed_benign.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "450d78d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "combined_df = pd.concat([parsed_malware,parsed_benign])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "71319e33",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6978, 59)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "f107cb39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_df.shape[0] == parsed_malware.shape[0] + parsed_benign.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "1a070ebe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>md5</th>\n",
       "      <th>Machine</th>\n",
       "      <th>SizeOfOptionalHeader</th>\n",
       "      <th>Characteristics</th>\n",
       "      <th>MajorLinkerVersion</th>\n",
       "      <th>MinorLinkerVersion</th>\n",
       "      <th>SizeOfCode</th>\n",
       "      <th>SizeOfInitializedData</th>\n",
       "      <th>SizeOfUninitializedData</th>\n",
       "      <th>...</th>\n",
       "      <th>ResourcesMinEntropy</th>\n",
       "      <th>ResourcesMaxEntropy</th>\n",
       "      <th>ResourcesMeanSize</th>\n",
       "      <th>ResourcesMinSize</th>\n",
       "      <th>ResourcesMaxSize</th>\n",
       "      <th>LoadConfigurationSize</th>\n",
       "      <th>VersionInformationSize</th>\n",
       "      <th>legitimate</th>\n",
       "      <th>hash</th>\n",
       "      <th>source</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>dd7b1c66faa1bde0a42a868acafefcb3</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>36864</td>\n",
       "      <td>380928</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.781496</td>\n",
       "      <td>6.505338</td>\n",
       "      <td>963.6</td>\n",
       "      <td>20</td>\n",
       "      <td>4264</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>012a50629c3cf1e2a2e5133b729c2ac7765cf4115187b1...</td>\n",
       "      <td>malware</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>6f6d36db833a383f3836639cad4ddbb1</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>24576</td>\n",
       "      <td>420539</td>\n",
       "      <td>397312</td>\n",
       "      <td>...</td>\n",
       "      <td>1.919241</td>\n",
       "      <td>7.95996</td>\n",
       "      <td>8029.5</td>\n",
       "      <td>20</td>\n",
       "      <td>16936</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>018b4029f46e529da8dc57b8bc6245644ed59f63b4f8ea...</td>\n",
       "      <td>malware</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>4f105bf3461951a61a770ff1c9577107</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>20480</td>\n",
       "      <td>390466</td>\n",
       "      <td>430080</td>\n",
       "      <td>...</td>\n",
       "      <td>1.919241</td>\n",
       "      <td>7.961305</td>\n",
       "      <td>7916.75</td>\n",
       "      <td>20</td>\n",
       "      <td>16936</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>01a0bea806384827759ae032031516bfe843285cac3980...</td>\n",
       "      <td>malware</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 59 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  ID                               md5 Machine SizeOfOptionalHeader  \\\n",
       "0  1  dd7b1c66faa1bde0a42a868acafefcb3     332                  224   \n",
       "1  1  6f6d36db833a383f3836639cad4ddbb1     332                  224   \n",
       "2  1  4f105bf3461951a61a770ff1c9577107     332                  224   \n",
       "\n",
       "  Characteristics MajorLinkerVersion MinorLinkerVersion SizeOfCode  \\\n",
       "0             271                  6                  0      36864   \n",
       "1             271                  7                  0      24576   \n",
       "2             271                  7                  0      20480   \n",
       "\n",
       "  SizeOfInitializedData SizeOfUninitializedData  ... ResourcesMinEntropy  \\\n",
       "0                380928                       0  ...            1.781496   \n",
       "1                420539                  397312  ...            1.919241   \n",
       "2                390466                  430080  ...            1.919241   \n",
       "\n",
       "  ResourcesMaxEntropy ResourcesMeanSize ResourcesMinSize ResourcesMaxSize  \\\n",
       "0            6.505338             963.6               20             4264   \n",
       "1             7.95996            8029.5               20            16936   \n",
       "2            7.961305           7916.75               20            16936   \n",
       "\n",
       "  LoadConfigurationSize VersionInformationSize legitimate  \\\n",
       "0                     0                      0       None   \n",
       "1                     0                      0       None   \n",
       "2                     0                      0       None   \n",
       "\n",
       "                                                hash   source  \n",
       "0  012a50629c3cf1e2a2e5133b729c2ac7765cf4115187b1...  malware  \n",
       "1  018b4029f46e529da8dc57b8bc6245644ed59f63b4f8ea...  malware  \n",
       "2  01a0bea806384827759ae032031516bfe843285cac3980...  malware  \n",
       "\n",
       "[3 rows x 59 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_df.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4cfbd91f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'012a50629c3cf1e2a2e5133b729c2ac7765cf4115187b1da36303b91a1f7da7a'"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_df[\"hash\"].values[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72fb88ef",
   "metadata": {},
   "source": [
    "# Merge Labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "4e3b3d8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n",
       "        True,  True,  True])"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "benign_labels.columns.values == malware_labels.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "08ba74aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1082, 12)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "benign_labels.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "f432c115",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(10841, 12)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "malware_labels.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ad5a9f8d",
   "metadata": {},
   "outputs": [],
   "source": [
    "all_labels = pd.concat([benign_labels,malware_labels])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "55c9081f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_labels.shape[0] == malware_labels.shape[0] + benign_labels.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "e20838b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>type</th>\n",
       "      <th>hash</th>\n",
       "      <th>malice</th>\n",
       "      <th>generic</th>\n",
       "      <th>trojan</th>\n",
       "      <th>ransomware</th>\n",
       "      <th>worm</th>\n",
       "      <th>backdoor</th>\n",
       "      <th>spyware</th>\n",
       "      <th>rootkit</th>\n",
       "      <th>encrypter</th>\n",
       "      <th>downloader</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2a922ebe7edb08480baa1721ce1b5185fb5af7f64ec0f1...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>df23113f3c534e5becbd452bf2ad92cbcf2a92641f775f...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   type                                               hash  malice  generic  \\\n",
       "0     0  2a922ebe7edb08480baa1721ce1b5185fb5af7f64ec0f1...     0.0      0.0   \n",
       "1     0  df23113f3c534e5becbd452bf2ad92cbcf2a92641f775f...     0.0      0.0   \n",
       "\n",
       "   trojan  ransomware  worm  backdoor  spyware  rootkit  encrypter  downloader  \n",
       "0     0.0         0.0   0.0       0.0      0.0      0.0        0.0         0.0  \n",
       "1     0.0         0.0   0.0       0.0      0.0      0.0        0.0         0.0  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_labels.head(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff0b1835",
   "metadata": {},
   "source": [
    "## Add Labels "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b50b1e3",
   "metadata": {},
   "source": [
    "    I believe the delta here is because not all files were able to have their features extracted"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "b376106d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6978, 59)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "f9ef02bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(11923, 12)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_labels.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "3316aa1c",
   "metadata": {},
   "outputs": [],
   "source": [
    "return_df = pd.merge(combined_df,all_labels,how='left',on='hash')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "8f848cd4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6978, 70)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "return_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "4bc887b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>md5</th>\n",
       "      <th>Machine</th>\n",
       "      <th>SizeOfOptionalHeader</th>\n",
       "      <th>Characteristics</th>\n",
       "      <th>MajorLinkerVersion</th>\n",
       "      <th>MinorLinkerVersion</th>\n",
       "      <th>SizeOfCode</th>\n",
       "      <th>SizeOfInitializedData</th>\n",
       "      <th>SizeOfUninitializedData</th>\n",
       "      <th>...</th>\n",
       "      <th>malice</th>\n",
       "      <th>generic</th>\n",
       "      <th>trojan</th>\n",
       "      <th>ransomware</th>\n",
       "      <th>worm</th>\n",
       "      <th>backdoor</th>\n",
       "      <th>spyware</th>\n",
       "      <th>rootkit</th>\n",
       "      <th>encrypter</th>\n",
       "      <th>downloader</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>dd7b1c66faa1bde0a42a868acafefcb3</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>36864</td>\n",
       "      <td>380928</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.934579</td>\n",
       "      <td>0.320000</td>\n",
       "      <td>0.560000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>6f6d36db833a383f3836639cad4ddbb1</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>24576</td>\n",
       "      <td>420539</td>\n",
       "      <td>397312</td>\n",
       "      <td>...</td>\n",
       "      <td>0.923077</td>\n",
       "      <td>0.493506</td>\n",
       "      <td>0.415584</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.012987</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.077922</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>4f105bf3461951a61a770ff1c9577107</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>20480</td>\n",
       "      <td>390466</td>\n",
       "      <td>430080</td>\n",
       "      <td>...</td>\n",
       "      <td>0.931298</td>\n",
       "      <td>0.452055</td>\n",
       "      <td>0.397260</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.123288</td>\n",
       "      <td>0.027397</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 70 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  ID                               md5 Machine SizeOfOptionalHeader  \\\n",
       "0  1  dd7b1c66faa1bde0a42a868acafefcb3     332                  224   \n",
       "1  1  6f6d36db833a383f3836639cad4ddbb1     332                  224   \n",
       "2  1  4f105bf3461951a61a770ff1c9577107     332                  224   \n",
       "\n",
       "  Characteristics MajorLinkerVersion MinorLinkerVersion SizeOfCode  \\\n",
       "0             271                  6                  0      36864   \n",
       "1             271                  7                  0      24576   \n",
       "2             271                  7                  0      20480   \n",
       "\n",
       "  SizeOfInitializedData SizeOfUninitializedData  ...    malice   generic  \\\n",
       "0                380928                       0  ...  0.934579  0.320000   \n",
       "1                420539                  397312  ...  0.923077  0.493506   \n",
       "2                390466                  430080  ...  0.931298  0.452055   \n",
       "\n",
       "     trojan ransomware      worm backdoor spyware rootkit encrypter downloader  \n",
       "0  0.560000        0.0  0.020000      0.0     0.0     0.0  0.100000   0.000000  \n",
       "1  0.415584        0.0  0.012987      0.0     0.0     0.0  0.077922   0.000000  \n",
       "2  0.397260        0.0  0.000000      0.0     0.0     0.0  0.123288   0.027397  \n",
       "\n",
       "[3 rows x 70 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "return_df.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "ce5e3479",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'md5', 'Machine', 'SizeOfOptionalHeader', 'Characteristics',\n",
       "       'MajorLinkerVersion', 'MinorLinkerVersion', 'SizeOfCode',\n",
       "       'SizeOfInitializedData', 'SizeOfUninitializedData',\n",
       "       'AddressOfEntryPoint', 'BaseOfCode', 'BaseOfData', 'ImageBase',\n",
       "       'SectionAlignment', 'FileAlignment', 'MajorOperatingSystemVersion',\n",
       "       'MinorOperatingSystemVersion', 'MajorImageVersion', 'MinorImageVersion',\n",
       "       'MajorSubsystemVersion', 'MinorSubsystemVersion', 'SizeOfImage',\n",
       "       'SizeOfHeaders', 'CheckSum', 'Subsystem', 'DllCharacteristics',\n",
       "       'SizeOfStackReserve', 'SizeOfStackCommit', 'SizeOfHeapReserve',\n",
       "       'SizeOfHeapCommit', 'LoaderFlags', 'NumberOfRvaAndSizes', 'SectionsNb',\n",
       "       'SectionsMeanEntropy', 'SectionsMinEntropy', 'SectionsMaxEntropy',\n",
       "       'SectionsMeanRawsize', 'SectionsMinRawsize', 'SectionMaxRawsize',\n",
       "       'SectionsMeanVirtualsize', 'SectionsMinVirtualsize',\n",
       "       'SectionMaxVirtualsize', 'ImportsNbDLL', 'ImportsNb',\n",
       "       'ImportsNbOrdinal', 'ExportNb', 'ResourcesNb', 'ResourcesMeanEntropy',\n",
       "       'ResourcesMinEntropy', 'ResourcesMaxEntropy', 'ResourcesMeanSize',\n",
       "       'ResourcesMinSize', 'ResourcesMaxSize', 'LoadConfigurationSize',\n",
       "       'VersionInformationSize', 'legitimate', 'hash', 'source', 'type',\n",
       "       'malice', 'generic', 'trojan', 'ransomware', 'worm', 'backdoor',\n",
       "       'spyware', 'rootkit', 'encrypter', 'downloader'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "return_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "cffc3e83",
   "metadata": {},
   "outputs": [],
   "source": [
    "return_df = return_df[['hash', 'source', 'type','ID', 'md5', 'Machine', 'SizeOfOptionalHeader', 'Characteristics',\n",
    "       'MajorLinkerVersion', 'MinorLinkerVersion', 'SizeOfCode',\n",
    "       'SizeOfInitializedData', 'SizeOfUninitializedData',\n",
    "       'AddressOfEntryPoint', 'BaseOfCode', 'BaseOfData', 'ImageBase',\n",
    "       'SectionAlignment', 'FileAlignment', 'MajorOperatingSystemVersion',\n",
    "       'MinorOperatingSystemVersion', 'MajorImageVersion', 'MinorImageVersion',\n",
    "       'MajorSubsystemVersion', 'MinorSubsystemVersion', 'SizeOfImage',\n",
    "       'SizeOfHeaders', 'CheckSum', 'Subsystem', 'DllCharacteristics',\n",
    "       'SizeOfStackReserve', 'SizeOfStackCommit', 'SizeOfHeapReserve',\n",
    "       'SizeOfHeapCommit', 'LoaderFlags', 'NumberOfRvaAndSizes', 'SectionsNb',\n",
    "       'SectionsMeanEntropy', 'SectionsMinEntropy', 'SectionsMaxEntropy',\n",
    "       'SectionsMeanRawsize', 'SectionsMinRawsize', 'SectionMaxRawsize',\n",
    "       'SectionsMeanVirtualsize', 'SectionsMinVirtualsize',\n",
    "       'SectionMaxVirtualsize', 'ImportsNbDLL', 'ImportsNb',\n",
    "       'ImportsNbOrdinal', 'ExportNb', 'ResourcesNb', 'ResourcesMeanEntropy',\n",
    "       'ResourcesMinEntropy', 'ResourcesMaxEntropy', 'ResourcesMeanSize',\n",
    "       'ResourcesMinSize', 'ResourcesMaxSize', 'LoadConfigurationSize',\n",
    "       'VersionInformationSize', 'legitimate',\n",
    "       'malice', 'generic', 'trojan', 'ransomware', 'worm', 'backdoor',\n",
    "       'spyware', 'rootkit', 'encrypter', 'downloader']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a131e509",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hash</th>\n",
       "      <th>source</th>\n",
       "      <th>type</th>\n",
       "      <th>ID</th>\n",
       "      <th>md5</th>\n",
       "      <th>Machine</th>\n",
       "      <th>SizeOfOptionalHeader</th>\n",
       "      <th>Characteristics</th>\n",
       "      <th>MajorLinkerVersion</th>\n",
       "      <th>MinorLinkerVersion</th>\n",
       "      <th>...</th>\n",
       "      <th>malice</th>\n",
       "      <th>generic</th>\n",
       "      <th>trojan</th>\n",
       "      <th>ransomware</th>\n",
       "      <th>worm</th>\n",
       "      <th>backdoor</th>\n",
       "      <th>spyware</th>\n",
       "      <th>rootkit</th>\n",
       "      <th>encrypter</th>\n",
       "      <th>downloader</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>012a50629c3cf1e2a2e5133b729c2ac7765cf4115187b1...</td>\n",
       "      <td>malware</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>dd7b1c66faa1bde0a42a868acafefcb3</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.934579</td>\n",
       "      <td>0.320000</td>\n",
       "      <td>0.560000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.020000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>018b4029f46e529da8dc57b8bc6245644ed59f63b4f8ea...</td>\n",
       "      <td>malware</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6f6d36db833a383f3836639cad4ddbb1</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.923077</td>\n",
       "      <td>0.493506</td>\n",
       "      <td>0.415584</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.012987</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.077922</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>01a0bea806384827759ae032031516bfe843285cac3980...</td>\n",
       "      <td>malware</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4f105bf3461951a61a770ff1c9577107</td>\n",
       "      <td>332</td>\n",
       "      <td>224</td>\n",
       "      <td>271</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.931298</td>\n",
       "      <td>0.452055</td>\n",
       "      <td>0.397260</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.123288</td>\n",
       "      <td>0.027397</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 70 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                hash   source  type ID  \\\n",
       "0  012a50629c3cf1e2a2e5133b729c2ac7765cf4115187b1...  malware     0  1   \n",
       "1  018b4029f46e529da8dc57b8bc6245644ed59f63b4f8ea...  malware     0  1   \n",
       "2  01a0bea806384827759ae032031516bfe843285cac3980...  malware     0  1   \n",
       "\n",
       "                                md5 Machine SizeOfOptionalHeader  \\\n",
       "0  dd7b1c66faa1bde0a42a868acafefcb3     332                  224   \n",
       "1  6f6d36db833a383f3836639cad4ddbb1     332                  224   \n",
       "2  4f105bf3461951a61a770ff1c9577107     332                  224   \n",
       "\n",
       "  Characteristics MajorLinkerVersion MinorLinkerVersion  ...    malice  \\\n",
       "0             271                  6                  0  ...  0.934579   \n",
       "1             271                  7                  0  ...  0.923077   \n",
       "2             271                  7                  0  ...  0.931298   \n",
       "\n",
       "    generic    trojan ransomware      worm backdoor spyware rootkit encrypter  \\\n",
       "0  0.320000  0.560000        0.0  0.020000      0.0     0.0     0.0  0.100000   \n",
       "1  0.493506  0.415584        0.0  0.012987      0.0     0.0     0.0  0.077922   \n",
       "2  0.452055  0.397260        0.0  0.000000      0.0     0.0     0.0  0.123288   \n",
       "\n",
       "  downloader  \n",
       "0   0.000000  \n",
       "1   0.000000  \n",
       "2   0.027397  \n",
       "\n",
       "[3 rows x 70 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "return_df.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "a812ea1c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['malware', 'benign'], dtype=object)"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "return_df[\"source\"].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d29c9af8",
   "metadata": {},
   "source": [
    "# See Loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "b638a12e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6906"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(os.listdir(malware_files))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "9a551147",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6016"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "return_df[return_df[\"source\"]==\"malware\"][\"hash\"].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "56ddb28d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1082"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(os.listdir(benign_files))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "a0ac98bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "962"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "return_df[return_df[\"source\"]==\"benign\"][\"hash\"].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e5899d5",
   "metadata": {},
   "source": [
    "# Save"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "ef87ea60",
   "metadata": {},
   "outputs": [],
   "source": [
    "return_df.to_pickle(\"extended_dike_modeling.p\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "9b05dc3e",
   "metadata": {},
   "outputs": [],
   "source": [
    "with pd.ExcelWriter('extended_dike_modeling.xlsx') as writer:  \n",
    "    return_df.to_excel(writer, sheet_name='model_data')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
